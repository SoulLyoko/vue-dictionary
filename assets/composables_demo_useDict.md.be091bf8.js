import{_ as n,o as s,b as a,h as t}from"./app.08059938.js";const f='{"title":"useDict","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u57FA\u7840\u7528\u6CD5","slug":"\u57FA\u7840\u7528\u6CD5"},{"level":2,"title":"\u4F7F\u7528\u5B57\u5178\u7F13\u5B58","slug":"\u4F7F\u7528\u5B57\u5178\u7F13\u5B58"},{"level":2,"title":"\u7C7B\u578B\u5B9A\u4E49","slug":"\u7C7B\u578B\u5B9A\u4E49"}],"relativePath":"composables/demo/useDict.md"}',p={},o=t(`<h1 id="usedict" tabindex="-1">useDict <a class="header-anchor" href="#usedict" aria-hidden="true">#</a></h1><h2 id="\u57FA\u7840\u7528\u6CD5" tabindex="-1">\u57FA\u7840\u7528\u6CD5 <a class="header-anchor" href="#\u57FA\u7840\u7528\u6CD5" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useDict <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue-dictionary&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> dictData <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&quot;apple&quot;</span><span class="token punctuation">,</span> id<span class="token operator">:</span> <span class="token string">&quot;1&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&quot;banana&quot;</span><span class="token punctuation">,</span> id<span class="token operator">:</span> <span class="token string">&quot;2&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&quot;cherry&quot;</span><span class="token punctuation">,</span> id<span class="token operator">:</span> <span class="token string">&quot;3&quot;</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> dictOption <span class="token operator">=</span> <span class="token punctuation">{</span> label<span class="token operator">:</span> <span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> res<span class="token operator">:</span> <span class="token string">&quot;res&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">getDictData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>dictData<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token punctuation">,</span> execute <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useDict</span><span class="token punctuation">(</span><span class="token string">&quot;fruits&quot;</span><span class="token punctuation">,</span> getDictData<span class="token punctuation">,</span> dictOption<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Ref&lt;dictData&gt;</span>
<span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u518D\u6267\u884C\u4E00\u6B21\`getDictData()\`</span>
</code></pre></div><h2 id="\u4F7F\u7528\u5B57\u5178\u7F13\u5B58" tabindex="-1">\u4F7F\u7528\u5B57\u5178\u7F13\u5B58 <a class="header-anchor" href="#\u4F7F\u7528\u5B57\u5178\u7F13\u5B58" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useDict</span><span class="token punctuation">(</span><span class="token string">&quot;fruits&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u540C\u4E8E</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> fruits<span class="token operator">:</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useDict</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Ref&lt;dictData&gt;</span>
</code></pre></div><h2 id="\u7C7B\u578B\u5B9A\u4E49" tabindex="-1">\u7C7B\u578B\u5B9A\u4E49 <a class="header-anchor" href="#\u7C7B\u578B\u5B9A\u4E49" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">DictStorageItem<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> DictItem<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  data<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
  isLoading<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
  isFinished<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token function-variable function">execute</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">DictStorage</span> <span class="token operator">=</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> DictStorageItem<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">useDict</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> DictStorage<span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useDict</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> DictItem<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>key<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> dictData<span class="token operator">?</span><span class="token operator">:</span> DictData<span class="token punctuation">,</span> dictOption<span class="token operator">?</span><span class="token operator">:</span> Config<span class="token punctuation">)</span><span class="token operator">:</span> DictStorageItem<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre></div>`,7),e=[o];function c(l,u,i,k,r,d){return s(),a("div",null,e)}var h=n(p,[["render",c]]);export{f as __pageData,h as default};
